# kubegenesis.yml - KubeGenesis Project Configuration

config:
  clusterName: "{{CLUSTER_NAME}}"
  cloudProvider: "{{CLOUD_PROVIDER}}" # aws, gcp, local
  region: "us-east-1" # Default para AWS, ajustar para outros provedores
  kubernetesVersion: "1.28.2"
  # Adicionar aqui configurações de GPU, dados quentes/frios futuramente

nodes:
  masters:
    count: 3
    instanceType: "t3.medium" # Ajustar para o provedor
  workers:
    count: 3
    instanceType: "t3.large" # Ajustar para o provedor
    # Exemplo de worker com GPU (será expandido)
    # gpuWorkers:
    #   count: 1
    #   instanceType: "p3.2xlarge" # Exemplo AWS GPU instance

provisioningTasks:
  - name: "Initialize Terraform and select workspace"
    run: |
      terraform -chdir=infrastructure/terraform init
      terraform -chdir=infrastructure/terraform workspace select {{CLUSTER_NAME}} || terraform -chdir=infrastructure/terraform workspace new {{CLUSTER_NAME}}

  - name: "Provision cloud infrastructure"
    terraform:
      # Variáveis serão passadas para o Terraform
      # Estas serão lidas do 'config' e 'nodes' acima
      vars:
        cluster_name: "{{CLUSTER_NAME}}"
        region: "{{REGION}}" # Placeholder, será substituído pelo script
        master_count: "{{NODES_MASTERS_COUNT}}"
        master_instance_type: "{{NODES_MASTERS_INSTANCETYPE}}"
        worker_count: "{{NODES_WORKERS_COUNT}}"
        worker_instance_type: "{{NODES_WORKERS_INSTANCETYPE}}"

  - name: "Wait for SSH to be available on all nodes"
    ansible:
      module: "wait_for_connection"
      timeout: 300

  - name: "Apply common configuration to all nodes"
    ansible:
      playbook: "playbooks/common.yml"

  - name: "Bootstrap the Kubernetes control plane"
    ansible:
      playbook: "playbooks/control-plane.yml"
      tags: ["etcd", "kube-masters"]

  - name: "Join worker nodes to the cluster"
    ansible:
      playbook: "playbooks/worker-join.yml"

  - name: "Install CNI (Calico)"
    kubernetes:
      manifest: "calico.yaml"
      # Ou usar um Helm Chart
      # helm:
      #   chart: "calico"
      #   repo: "https://docs.projectcalico.org/charts"
      #   version: "3.26.1"

  - name: "Install Argo CD for GitOps"
    kubernetes:
      manifest: "argocd-install.yaml"
      # Ou usar um Helm Chart
      # helm:
      #   chart: "argo-cd"
      #   repo: "https://argoproj.github.io/argo-helm"
      #   version: "5.36.0"
